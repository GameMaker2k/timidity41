# Makefile.in generated by automake 1.15 from Makefile.am.
# timidity/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# TiMidity++ -- MIDI to WAVE converter and player
# Copyright (C) 1999-2007 Masanao Izumo <iz@onicos.co.jp>
# Copyright (C) 1995 Tuukka Toivonen <tt@cgs.fi>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

# Define follows if you want to change.
# Note that the definition of beginning with just one `#' implies
# default value from configure.


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgincludedir = $(includedir)/TiMidity++
pkglibexecdir = $(libexecdir)/TiMidity++
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = timidity$(EXEEXT)
noinst_PROGRAMS = calcnewt$(EXEEXT)
subdir = timidity
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/autoconf/alsa.m4 \
	$(top_srcdir)/autoconf/ao.m4 $(top_srcdir)/autoconf/esd.m4 \
	$(top_srcdir)/autoconf/gtk-2.0.m4 \
	$(top_srcdir)/autoconf/gtk.m4 \
	$(top_srcdir)/autoconf/libFLAC.m4 \
	$(top_srcdir)/autoconf/libOggFLAC.m4 \
	$(top_srcdir)/autoconf/ogg.m4 $(top_srcdir)/autoconf/opus.m4 \
	$(top_srcdir)/autoconf/utils.m4 \
	$(top_srcdir)/autoconf/vorbis.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/autoconf/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h $(top_builddir)/interface.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_calcnewt_OBJECTS = calcnewt.$(OBJEXT)
calcnewt_OBJECTS = $(am_calcnewt_OBJECTS)
calcnewt_LDADD = $(LDADD)
am_timidity_OBJECTS = aiff_a.$(OBJEXT) aq.$(OBJEXT) au_a.$(OBJEXT) \
	audio_cnv.$(OBJEXT) benchmark_a.$(OBJEXT) common.$(OBJEXT) \
	controls.$(OBJEXT) effect.$(OBJEXT) envelope.$(OBJEXT) \
	filter.$(OBJEXT) freq.$(OBJEXT) instrum.$(OBJEXT) \
	int_synth.$(OBJEXT) list_a.$(OBJEXT) loadtab.$(OBJEXT) \
	m2m.$(OBJEXT) mfi.$(OBJEXT) miditrace.$(OBJEXT) \
	midi_a.$(OBJEXT) mix.$(OBJEXT) mod.$(OBJEXT) \
	mod2midi.$(OBJEXT) modmid_a.$(OBJEXT) mt19937ar.$(OBJEXT) \
	optcode.$(OBJEXT) oscillator.$(OBJEXT) output.$(OBJEXT) \
	playmidi.$(OBJEXT) quantity.$(OBJEXT) raw_a.$(OBJEXT) \
	rcp.$(OBJEXT) readmidi.$(OBJEXT) recache.$(OBJEXT) \
	resample.$(OBJEXT) sbkconv.$(OBJEXT) sffile.$(OBJEXT) \
	sfitem.$(OBJEXT) smfconv.$(OBJEXT) smplfile.$(OBJEXT) \
	sndfont.$(OBJEXT) tables.$(OBJEXT) timidity.$(OBJEXT) \
	thread.$(OBJEXT) version.$(OBJEXT) voice_effect.$(OBJEXT) \
	voice_filter.$(OBJEXT) wave_a.$(OBJEXT) wrd_read.$(OBJEXT) \
	wrdt.$(OBJEXT) myini.$(OBJEXT) sndfontini.$(OBJEXT) \
	volumecalc_a.$(OBJEXT)
timidity_OBJECTS = $(am_timidity_OBJECTS)
timidity_DEPENDENCIES = $(SYSEXTRAS:.c=.$(OBJEXT)) \
	$(top_builddir)/interface/libinterface.a \
	$(top_builddir)/libarc/libarc.a \
	$(top_builddir)/libunimod/libunimod.a \
	$(top_builddir)/utils/libutils.a \
	$(W32GUI_RES)
#timidity_DEPENDENCIES = $(SYSEXTRAS:.c=.$(OBJEXT)) \
#	$(top_builddir)\\interface\\interface.lib \
#	$(top_builddir)\\libarc\\arc.lib \
#	$(top_builddir)\\libunimod\\unimod.lib \
#	$(top_builddir)\\utils\\utils.lib \
#	$(W32GUI_RES)
#timidity_DEPENDENCIES = interface.lib \
#	arc.lib \
#	unimod.lib \
#	utils.lib
#timidity_DEPENDENCIES =  \
#	interface.lib arc.lib \
#	unimod.lib utils.lib
#timidity_DEPENDENCIES =  \
#	$(SYSEXTRAS:.c=.$(OBJEXT)) \
#	$(top_builddir)/interface/interface.lib \
#	$(top_builddir)/libarc/arc.lib \
#	$(top_builddir)/libunimod/unimod.lib \
#	$(top_builddir)/utils/utils.lib \
#	$(W32GUI_RES)
#timidity_DEPENDENCIES = $(SYSEXTRAS:.c=.$(OBJEXT)) \
#	$(top_builddir)/interface/interface.lib \
#	$(top_builddir)/libarc/arc.lib \
#	$(top_builddir)/libunimod/unimod.lib \
#	$(top_builddir)/utils/utils.lib $(W32GUI_RES)
timidity_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(timidity_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autoconf/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(calcnewt_SOURCES) $(timidity_SOURCES) \
	$(EXTRA_timidity_SOURCES)
DIST_SOURCES = $(calcnewt_SOURCES) $(timidity_SOURCES) \
	$(EXTRA_timidity_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/autoconf/depcomp \
	$(top_srcdir)/autoconf/mkinstalldirs \
	$(top_srcdir)/common.makefile.in
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
pkgdatadir = /etc/timidity

#DEFS = -DHAVE_CONFIG_H
#LDFLAGS = 
#LIBS = -lm  -lncurses -ldl     
#SHLD = gcc -shared 
#SHCFLAGS =  -fPIC
#

#prefix = /usr
#exec_prefix = ${prefix}
#bindir = ${exec_prefix}/bin
#libdir = ${exec_prefix}/lib
#datadir = ${datarootdir}
#mandir = /usr/share/man
pkglibdir = ${prefix}/lib/timidity
ACLOCAL = ${SHELL} /home/larz/tim/autoconf/missing aclocal-1.15
ALSA_CFLAGS = 
ALSA_LIBS = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AO_CFLAGS = 
AO_LIBS = 
ARTSCCONFIG = 
ARTSINCL = 
ARTSLIBS = 
AUTOCONF = ${SHELL} /home/larz/tim/autoconf/missing autoconf
AUTOHEADER = ${SHELL} /home/larz/tim/autoconf/missing autoheader
AUTOMAKE = ${SHELL} /home/larz/tim/autoconf/missing automake-1.15
AWK = mawk
A_so_libs = 
BORLANDC_LDFLAGS = 
BORLANDC_START = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -O2
CPP = gcc -E
CPPFLAGS =  -DAU_OSS
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DMC_LDFLAGS = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ELFILES =  timidity.el
EMACS = no
EMACSLOADPATH = 
ESD_CFLAGS = 
ESD_CONFIG = no
ESD_LIBS = 
EXEEXT = 
EXTRADEFS =  -DAU_OSS
EXTRAINCS = 
EXTRALIBS = 
GREP = /bin/grep
GTK_CFLAGS = 
GTK_CONFIG = no
GTK_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTERFACE_SRCS =  ncurs_c.c emacs_c.c server_c.c
LDFLAGS = 
LIBFLAC_CFLAGS = 
LIBFLAC_LIBS = 
LIBOBJS = 
LIBOGGFLAC_CFLAGS = 
LIBOGGFLAC_LIBS = 
LIBS = -lm  -lncurses -ldl     
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/larz/tim/autoconf/missing makeinfo
MKDIR_P = /bin/mkdir -p
NETSRCS = 
OBJEXT = o
OGG_CFLAGS = 
OGG_LIBS = 
OPUS_CFLAGS = 
OPUS_LIBS = 
PACKAGE = TiMidity++
PACKAGE_BUGREPORT = timidity-talk@lists.sourceforge.net
PACKAGE_NAME = TiMidity++
PACKAGE_STRING = TiMidity++ 2.14.0
PACKAGE_TARNAME = TiMidity++
PACKAGE_URL = 
PACKAGE_VERSION = 2.14.0
PATH_SEPARATOR = :
PKG_CONFIG = no
POCC_LDFLAGS = 
P_so_libs = 
RANLIB = ranlib
SET_MAKE = 
SHCFLAGS =  -fPIC
SHELL = /bin/bash
SHLD = gcc -shared 
STRIP = 
SYSEXTRAS =  oss_a.c flac_a.c dl_dlopen.c
TCLSH = tclsh
T_so_libs = 
VCPP_LDFLAGS = 
VERSION = 2.14.0
VORBISENC_LIBS = 
VORBISFILE_LIBS = 
VORBIS_CFLAGS = 
VORBIS_LIBS = 
WATCOM_LDFLAGS = 

#CC= gcc
#CFLAGS =  -O2
# For pentium gcc
# For PGCC
#CPPFLAGS =  -DAU_OSS
WINDRES = 
W_so_libs = 
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
a_so_libs = 
abs_builddir = /home/larz/tim/timidity
abs_srcdir = /home/larz/tim/timidity
abs_top_builddir = /home/larz/tim
abs_top_srcdir = /home/larz/tim
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
dynamic_targets =  if_vt100.$(so)
e_so_libs = 
exec_prefix = ${prefix}
g_so_libs = 
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
i_so_libs = 
includedir = ${prefix}/include
infodir = /usr/share/info
install_sh = ${SHELL} /home/larz/tim/autoconf/install-sh
k_so_libs = 
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
lispdir = /usr/share/emacs/site-lisp/timidity-el
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
m_so_libs = 
mandir = /usr/share/man
mkdir_p = $(MKDIR_P)
n_so_libs = 
oldincludedir = /usr/include
p_so_libs = 
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
r_so_libs = 
runstatedir = ${localstatedir}/run
s_so_libs = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
so = so
srcdir = .
sysconfdir = /etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
tcltk_dep = 
timidity_LDFLAGS = -rdynamic
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
w_so_libs = 
xawresdir = 
#INSTALL = /usr/bin/install -c

# Where to install the patches, config files.
PKGDATADIR = $(pkgdatadir)

# Where to install the Tcl code and the bitmaps.
# It also contains bitmaps which are shared with XAW interface.
PKGLIBDIR = $(pkglibdir)

# Where to install the dynamic link interface.
SHLIB_DIR = $(pkglibdir)

# Where to install timidity.el
ELISP_DIR = $(lispdir)

# Where to install TiMidity.ad
XAWRES = ${xawresdir}/app-defaults
XAWRES_JA = ${xawresdir}/ja_JP.eucJP/app-defaults

# If you want to change TCL_DIR, please do follows.
# * Add -DTKPROGPATH=\"$(TCL_DIR)/tkmidity.tcl\" to CPPFLAGS.
# * Make a symbolic link $(PKGLIBDIR)/bitmaps to $(TCL_DIR)/bitmaps
TCL_DIR = $(PKGLIBDIR)

# Define the timidity default file search path.
DEF_DEFAULT_PATH = -DDEFAULT_PATH=\"$(PKGDATADIR)\"

# You sould not change follows definitions. 
DEF_PKGDATADIR = -DPKGDATADIR=\"$(PKGDATADIR)\"
DEF_PKGLIBDIR = -DPKGLIBDIR=\"$(PKGLIBDIR)\"
DEF_SHLIB_DIR = -DSHLIB_DIR=\"$(SHLIB_DIR)\"
BITMAP_DIR = $(TCL_DIR)/bitmaps
INCLUDES = \
	-I$(top_srcdir) \
	-I$(top_srcdir)/libarc \
	-I$(top_srcdir)/libunimod \
	-I$(top_srcdir)/interface \
	-I$(top_srcdir)/utils \
	$(EXTRAINCS)

timidity_SOURCES = \
	aenc.h \
	aiff_a.c \
	aq.c \
	aq.h \
	au_a.c \
	audio_cnv.c \
	audio_cnv.h \
	benchmark_a.c \
	common.c \
	common.h \
	controls.c \
	controls.h \
	dlutils.h \
	effect.c \
	effect.h \
	envelope.c \
	envelope.h \
	filter.c \
	filter.h \
	freq.c \
	freq.h \
	instrum.c \
	instrum.h \
	int_synth.c \
	int_synth.h \
	list_a.c \
	loadtab.c \
	m2m.c \
	mfi.c \
	mid-j.defs \
	mid.defs \
	miditrace.c \
	miditrace.h \
	midi_a.c \
	mix.c \
	mix.h \
	mod.c \
	mod.h \
	mod2midi.c \
	mod2midi.h \
	modmid_a.c \
	mt19937ar.c \
	mt19937ar.h \
	optcode.c \
	optcode.h \
	oscillator.c \
	oscillator.h \
	output.c \
	output.h \
	playmidi.c \
	playmidi.h \
	quantity.c \
	quantity.h \
	raw_a.c \
	rcp.c \
	readmidi.c \
	readmidi.h \
	recache.c \
	recache.h \
	resample.c \
	resample.h \
	sbkconv.c \
	sffile.c \
	sffile.h \
	sfitem.c \
	sfitem.h \
	sflayer.h \
	smfconv.c \
	smfconv.h \
	smplfile.c \
	sndfont.c \
	sysdep.h \
	tables.c \
	tables.h \
	timidity.c \
	timidity.h \
	thread.c \
	thread.h \
	version.c \
	voice_effect.c \
	voice_effect.h \
	voice_filter.c \
	voice_filter.h \
	wave_a.c \
	wrd.h \
	wrd_read.c \
	wrdt.c \
	myini.c \
	sndfontini.c \
	volumecalc_a.c

EXTRA_timidity_SOURCES = \
	alsa_a.c \
	ao_a.c \
	aRts_a.c \
	audriv.h \
	audriv_a.c \
	audriv_al.c \
	audriv_mme.c \
	audriv_none.c \
	darwin_a.c \
	dl_w32.c \
	dl_dld.c \
	dl_dlopen.c \
	dl_dyld.c \
	dl_hpux.c \
	bsd20_a.c \
	flac_a.c \
	esd_a.c \
	gogo_a.h \
	gogo_a.c \
	hpux_a.c \
	hpux_d_a.c \
	jack_a.c \
	mac_a.c \
	mac_qt_a.c \
	mac_com.h \
	mac_dlog.c \
	mac_main.c \
	mac_main.h \
	mac_soundspec.c \
	mfnode.c \
	mfnode.h \
	nas_a.c \
	npipe_a.c \
	opus_a.c \
	oss_a.c \
	portaudio_a.c \
	speex_a.c \
	sun_a.c \
	vorbis_a.c \
	w32_a.c \
	w32_gogo.c \
	w32_gogo.h \
	w32g_vorbisenc_dll.c \
	w32g_vorbis_dll.c \
	w32g_ogg_dll.c \
	w32g_opus_dll.c \
	w32_portaudio.h \
	w32_portaudio_dll.c \
	w32_soundspec.c \
	w32_libFLAC_dll.c \
	w32_libFLAC_dll.h \
	w32_libFLAC_dll_g.h \
	w32_libFLAC_dll_i.h \
	w32_libOggFLAC_dll.c \
	w32_libOggFLAC_dll.h \
	w32_libOggFLAC_dll_g.h \
	w32_libOggFLAC_dll_i.h

calcnewt_SOURCES = calcnewt.c
#W32GUI_RES = $(top_builddir)/interface/w32g_res.res
#W32GUI_RES = $(top_builddir)/interface/w32g_res.res
##W32GUI_RES = $(top_builddir)\\interface\\w32g_res.res
##W32GUI_RES = $(top_builddir)\\interface\\w32g_res.res
##W32GUI_RES = w32g_res.res
##W32GUI_RES = w32g_res.res
CLEANFILES = newton_table.c
timidity_LDADD = \
	$(SYSEXTRAS:.c=.$(OBJEXT)) \
	$(top_builddir)/interface/libinterface.a \
	$(top_builddir)/libarc/libarc.a \
	$(top_builddir)/libunimod/libunimod.a \
	$(top_builddir)/utils/libutils.a \
	$(W32GUI_RES)

#timidity_LDADD = \
#	$(SYSEXTRAS:.c=.$(OBJEXT)) \
#	$(top_builddir)\\interface\\interface.lib \
#	$(top_builddir)\\libarc\\arc.lib \
#	$(top_builddir)\\libunimod\\unimod.lib \
#	$(top_builddir)\\utils\\utils.lib \
#	$(W32GUI_RES)

#timidity_LDADD = \
#      interface.lib \
#      arc.lib \
#      unimod.lib \
#      utils.lib

#timidity_LDADD = \
#      interface.lib \
#      arc.lib \
#      unimod.lib \
#      utils.lib

#timidity_LDADD = \
#	$(SYSEXTRAS:.c=.$(OBJEXT)) \
#	$(top_builddir)/interface/interface.lib \
#	$(top_builddir)/libarc/arc.lib \
#	$(top_builddir)/libunimod/unimod.lib \
#	$(top_builddir)/utils/utils.lib \
#	$(W32GUI_RES)

#timidity_LDADD = \
#	$(SYSEXTRAS:.c=.$(OBJEXT)) \
#	$(top_builddir)/interface/interface.lib \
#	$(top_builddir)/libarc/arc.lib \
#	$(top_builddir)/libunimod/unimod.lib \
#	$(top_builddir)/utils/utils.lib \
#	$(W32GUI_RES)

timidity_dep = $(SYSEXTRAS:.c=.$(OBJEXT)) \
	$(top_builddir)/interface/libinterface.a \
	$(top_builddir)/libarc/libarc.a \
	$(top_builddir)/libunimod/libunimod.a \
	$(top_builddir)/utils/libutils.a \
	$(W32GUI_RES)

#timidity_dep = $(SYSEXTRAS:.c=.$(OBJEXT)) \
#	$(top_builddir)/interface/interface.lib \
#	$(top_builddir)/libarc/arc.lib \
#	$(top_builddir)/libunimod/unimod.lib \
#	$(top_builddir)/utils/utils.lib \
#	$(W32GUI_RES)

#timidity_dep = $(SYSEXTRAS:.c=.$(OBJEXT)) \
#	$(top_builddir)/interface/interface.lib \
#	$(top_builddir)/libarc/arc.lib \
#	$(top_builddir)/libunimod/unimod.lib \
#	$(top_builddir)/utils/utils.lib \
#	$(W32GUI_RES)

#timidity_dep = $(SYSEXTRAS:.c=.$(OBJEXT)) \
#	$(top_builddir)/interface/interface.lib \
#	$(top_builddir)/libarc/arc.lib \
#	$(top_builddir)/libunimod/unimod.lib \
#	$(top_builddir)/utils/utils.lib \
#	$(W32GUI_RES)

#timidity_dep = $(SYSEXTRAS:.c=.$(OBJEXT)) \
#	$(top_builddir)/interface/interface.lib \
#	$(top_builddir)/libarc/arc.lib \
#	$(top_builddir)/libunimod/unimod.lib \
#	$(top_builddir)/utils/utils.lib \
#	$(W32GUI_RES)

#timidity_dep = $(SYSEXTRAS:.c=.$(OBJEXT)) \
#	$(top_builddir)/interface/interface.lib \
#	$(top_builddir)/libarc/arc.lib \
#	$(top_builddir)/libunimod/unimod.lib \
#	$(top_builddir)/utils/utils.lib \
#	$(W32GUI_RES)

#BORLANDC_LINK_OPTIONS = \
#      -L..\\interface \
#      -L..\\libarc \
#      -L..\\libunimod \
#      -L..\\utils

#WATCOM_LINK_OPTIONS = \
#      LIBPath ..\\interface \
#      LibPath ..\\libarc \
#      LibPath ..\\libunimod \
#      LibPath ..\\utils

#VC_LINK = link.exe
##VC_LINK = link.exe -lib
#VCC_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS)
#POCC_LINK = polink.exe
##POCC_LINK = polib.exe
#POCCC_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS)
#BORLANDC_LINK = ilink32.exe -C -Gn
#WATCOM_LINK = wlink.exe 
#DMC_LINK = dmc.exe 
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/common.makefile.in $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu timidity/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu timidity/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/common.makefile.in $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

#calcnewt$(EXEEXT): $(calcnewt_OBJECTS) $(calcnewt_DEPENDENCIES) $(EXTRA_calcnewt_DEPENDENCIES) 
#	@rm -f calcnewt$(EXEEXT)
#	$(AM_V_CCLD)$(LINK) $(calcnewt_OBJECTS) $(calcnewt_LDADD) $(LIBS)

calcnewt$(EXEEXT): $(calcnewt_OBJECTS) $(calcnewt_DEPENDENCIES) $(EXTRA_calcnewt_DEPENDENCIES) 
	@rm -f calcnewt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(calcnewt_OBJECTS) $(calcnewt_LDADD) $(LIBS)

timidity$(EXEEXT): $(timidity_OBJECTS) $(timidity_DEPENDENCIES) $(EXTRA_timidity_DEPENDENCIES) 
	@rm -f timidity$(EXEEXT)
	$(AM_V_CCLD)$(timidity_LINK) $(timidity_OBJECTS) $(timidity_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/aRts_a.Po
include ./$(DEPDIR)/aiff_a.Po
include ./$(DEPDIR)/alsa_a.Po
include ./$(DEPDIR)/ao_a.Po
include ./$(DEPDIR)/aq.Po
include ./$(DEPDIR)/au_a.Po
include ./$(DEPDIR)/audio_cnv.Po
include ./$(DEPDIR)/audriv_a.Po
include ./$(DEPDIR)/audriv_al.Po
include ./$(DEPDIR)/audriv_mme.Po
include ./$(DEPDIR)/audriv_none.Po
include ./$(DEPDIR)/benchmark_a.Po
include ./$(DEPDIR)/bsd20_a.Po
include ./$(DEPDIR)/calcnewt.Po
include ./$(DEPDIR)/common.Po
include ./$(DEPDIR)/controls.Po
include ./$(DEPDIR)/darwin_a.Po
include ./$(DEPDIR)/dl_dld.Po
include ./$(DEPDIR)/dl_dlopen.Po
include ./$(DEPDIR)/dl_dyld.Po
include ./$(DEPDIR)/dl_hpux.Po
include ./$(DEPDIR)/dl_w32.Po
include ./$(DEPDIR)/effect.Po
include ./$(DEPDIR)/envelope.Po
include ./$(DEPDIR)/esd_a.Po
include ./$(DEPDIR)/filter.Po
include ./$(DEPDIR)/flac_a.Po
include ./$(DEPDIR)/freq.Po
include ./$(DEPDIR)/gogo_a.Po
include ./$(DEPDIR)/hpux_a.Po
include ./$(DEPDIR)/hpux_d_a.Po
include ./$(DEPDIR)/instrum.Po
include ./$(DEPDIR)/int_synth.Po
include ./$(DEPDIR)/jack_a.Po
include ./$(DEPDIR)/list_a.Po
include ./$(DEPDIR)/loadtab.Po
include ./$(DEPDIR)/m2m.Po
include ./$(DEPDIR)/mac_a.Po
include ./$(DEPDIR)/mac_dlog.Po
include ./$(DEPDIR)/mac_main.Po
include ./$(DEPDIR)/mac_qt_a.Po
include ./$(DEPDIR)/mac_soundspec.Po
include ./$(DEPDIR)/mfi.Po
include ./$(DEPDIR)/mfnode.Po
include ./$(DEPDIR)/midi_a.Po
include ./$(DEPDIR)/miditrace.Po
include ./$(DEPDIR)/mix.Po
include ./$(DEPDIR)/mod.Po
include ./$(DEPDIR)/mod2midi.Po
include ./$(DEPDIR)/modmid_a.Po
include ./$(DEPDIR)/mt19937ar.Po
include ./$(DEPDIR)/myini.Po
include ./$(DEPDIR)/nas_a.Po
include ./$(DEPDIR)/npipe_a.Po
include ./$(DEPDIR)/optcode.Po
include ./$(DEPDIR)/opus_a.Po
include ./$(DEPDIR)/oscillator.Po
include ./$(DEPDIR)/oss_a.Po
include ./$(DEPDIR)/output.Po
include ./$(DEPDIR)/playmidi.Po
include ./$(DEPDIR)/portaudio_a.Po
include ./$(DEPDIR)/quantity.Po
include ./$(DEPDIR)/raw_a.Po
include ./$(DEPDIR)/rcp.Po
include ./$(DEPDIR)/readmidi.Po
include ./$(DEPDIR)/recache.Po
include ./$(DEPDIR)/resample.Po
include ./$(DEPDIR)/sbkconv.Po
include ./$(DEPDIR)/sffile.Po
include ./$(DEPDIR)/sfitem.Po
include ./$(DEPDIR)/smfconv.Po
include ./$(DEPDIR)/smplfile.Po
include ./$(DEPDIR)/sndfont.Po
include ./$(DEPDIR)/sndfontini.Po
include ./$(DEPDIR)/speex_a.Po
include ./$(DEPDIR)/sun_a.Po
include ./$(DEPDIR)/tables.Po
include ./$(DEPDIR)/thread.Po
include ./$(DEPDIR)/timidity.Po
include ./$(DEPDIR)/version.Po
include ./$(DEPDIR)/voice_effect.Po
include ./$(DEPDIR)/voice_filter.Po
include ./$(DEPDIR)/volumecalc_a.Po
include ./$(DEPDIR)/vorbis_a.Po
include ./$(DEPDIR)/w32_a.Po
include ./$(DEPDIR)/w32_gogo.Po
include ./$(DEPDIR)/w32_libFLAC_dll.Po
include ./$(DEPDIR)/w32_libOggFLAC_dll.Po
include ./$(DEPDIR)/w32_portaudio_dll.Po
include ./$(DEPDIR)/w32_soundspec.Po
include ./$(DEPDIR)/w32g_ogg_dll.Po
include ./$(DEPDIR)/w32g_opus_dll.Po
include ./$(DEPDIR)/w32g_vorbis_dll.Po
include ./$(DEPDIR)/w32g_vorbisenc_dll.Po
include ./$(DEPDIR)/wave_a.Po
include ./$(DEPDIR)/wrd_read.Po
include ./$(DEPDIR)/wrdt.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


#timidity$(EXEEXT): $(timidity_OBJECTS) $(timidity_DEPENDENCIES) $(timidity_dep) $(W32GUI_RES)
#	@rm -f timidity$(EXEEXT)
#	$(VC_LINK) $(VCPP_LDFLAGS) $(timidity_OBJECTS) $(timidity_LDADD) $(LIBS) -out:timidity.exe

#calcnewt$(EXEEXT): $(calcnewt_OBJECTS) $(calcnewt_DEPENDENCIES)
#	@rm -f calcnewt$(EXEEXT)
#	$(VCC_LINK) $(calcnewt_LDFLAGS) $(calcnewt_OBJECTS) $(calcnewt_LDADD)
##timidity$(EXEEXT): $(timidity_OBJECTS) $(timidity_DEPENDENCIES) $(timidity_dep) $(W32GUI_RES)
##	@rm -f timidity$(EXEEXT)
##	$(POCC_LINK) $(timidity_OBJECTS) $(SYSEXTRAS:.c=.$(OBJEXT)) -out:timidity.lib
##	touch timidity$(EXEEXT)
#timidity$(EXEEXT): $(timidity_OBJECTS) $(timidity_DEPENDENCIES) $(timidity_dep) $(W32GUI_RES)
#	@rm -f timidity$(EXEEXT)
#	$(POCC_LINK) $(POCC_LDFLAGS) $(timidity_OBJECTS) $(timidity_LDADD) $(LIBS) -out:timidity.exe
#calcnewt$(EXEEXT): $(calcnewt_OBJECTS) $(calcnewt_DEPENDENCIES)
#	@rm -f calcnewt$(EXEEXT)
#	$(POCCC_LINK) $(calcnewt_LDFLAGS) $(calcnewt_OBJECTS) $(calcnewt_LDADD)

##timidity$(EXEEXT): $(timidity_OBJECTS) $(SYSEXTRAS:.c=.$(OBJEXT)) $(timidity_dep) $(W32GUI_RES)
##	@rm -f $@
##	for foo in $(timidity_OBJECTS) $(SYSEXTRAS:.c=.$(OBJEXT)) ;do  \
##	  tlib $@ +$$foo ; \
##	done
#timidity$(EXEEXT): $(timidity_OBJECTS) $(SYSEXTRAS:.c=.$(OBJEXT)) $(timidity_dep) $(W32GUI_RES)
#	@rm -f timidity$(EXEEXT)
#	$(BORLANDC_LINK) $(BORLANDC_LINK_OPTIONS) $(BORLANDC_START) $(timidity_OBJECTS) $(SYSEXTRAS:.c=.$(OBJEXT)), $@, ,$(timidity_LDADD) $(BORLANDC_LDFLAGS) $(LIBS), ,$(W32GUI_RES)
#calcnewt.$(OBJEXT): calcnewt.c
#	$(CC)  -tWC  -c calcnewt.c
#calcnewt$(EXEEXT): $(calcnewt_OBJECTS) $(calcnewt_DEPENDENCIES)
#	@rm -f calcnewt$(EXEEXT)
#	$(CCLD) $(calcnewt_LDFLAGS) $(calcnewt_OBJECTS) $(calcnewt_LDADD)
##timidity$(EXEEXT): $(timidity_OBJECTS) $(SYSEXTRAS:.c=.$(OBJEXT)) $(timidity_dep) $(W32GUI_RES)
##	@rm -f $@
##	for foo in $(timidity_OBJECTS) $(SYSEXTRAS:.c=.$(OBJEXT)) ;do  \
##	  wlib $@ +$$foo ; \
##	done
#timidity$(EXEEXT): $(timidity_OBJECTS) $(SYSEXTRAS:.c=.$(OBJEXT)) $(timidity_dep) $(W32GUI_RES)
#	@rm -f timidity$(EXEEXT)
#	$(WATCOM_LINK) $(WATCOM_LDFLAGS) `for foo in $(timidity_OBJECTS) $(SYSEXTRAS:.c=.$(OBJEXT)); do echo "File $$foo "; done;` Name $@ `for foo in  $(timidity_LDADD) $(LIBS); do echo "Library $$foo"; done;` $(WATCOM_LINK_OPTIONS)  `if test x$(W32GUI_RES) != x ; then  echo Option RESource=$(W32GUI_RES); fi;`
#calcnewt.$(OBJEXT): calcnewt.c
#	$(CCLD)  -c calcnewt.c
#calcnewt$(EXEEXT): $(calcnewt_OBJECTS) $(calcnewt_DEPENDENCIES)
#	@rm -f calcnewt$(EXEEXT)
#	$(WATCOM_LINK) File calcnewt.$(OBJEXT) Name $@
##timidity$(EXEEXT): $(timidity_OBJECTS) $(SYSEXTRAS:.c=.$(OBJEXT)) $(timidity_dep) $(W32GUI_RES)
##	@rm -f $@ $(@:.exe=.lib)
##	start lib -p128 -c  $(@:.exe=.lib) $(timidity_OBJECTS) $(SYSEXTRAS:.c=.$(OBJEXT))
##	if [ -f $(@:.exe=.lib) ] ;then touch $@ ;fi

#timidity$(EXEEXT): $(timidity_OBJECTS) $(SYSEXTRAS:.c=.$(OBJEXT)) $(timidity_dep) $(W32GUI_RES)
#	@rm -f $@
#	$(CC) $(CFLAGS) $(DMC_LDFLAGS) $(timidity_OBJECTS) $(timidity_LDADD) $(LIBS) -output $@
#	$(DMC_LINK) -WA $(DMC_LDFLAGS) $(timidity_OBJECTS) $(timidity_LDADD) $(LIBS) -output $@
#calcnewt.$(OBJEXT): calcnewt.c
#	$(CCLD)  -c calcnewt.c
#: $(calcnewt_OBJECTS) $(calcnewt_DEPENDENCIES)
#	@rm -f calcnewt$(EXEEXT)
#	$(DMC_LINK) calcnewt.$(OBJEXT) -output  $@
##calcnewt$(EXEEXT): $(calcnewt_OBJECTS) $(calcnewt_DEPENDENCIES) 
##	@rm -f calcnewt$(EXEEXT)
##	$(LINK) $(calcnewt_LDFLAGS) $(calcnewt_OBJECTS) $(calcnewt_LDADD)
##timidity$(EXEEXT): $(timidity_OBJECTS) $(timidity_DEPENDENCIES) 
##	@rm -f timidity$(EXEEXT)
##	ar -cru timidity.exe $(timidity_LDFLAGS) $(timidity_OBJECTS) $(timidity_LDADD) 
#calcnewt$(EXEEXT): $(calcnewt_OBJECTS) $(calcnewt_DEPENDENCIES) 
#	@rm -f calcnewt$(EXEEXT)
#	$(LINK) $(calcnewt_LDFLAGS) $(calcnewt_OBJECTS) $(calcnewt_LDADD)
#timidity$(EXEEXT): $(timidity_OBJECTS) $(timidity_DEPENDENCIES) 
#	@rm -f timidity$(EXEEXT)
#	$(LINK) $(timidity_LDFLAGS) $(timidity_OBJECTS) $(timidity_LDADD) $(LIBS)
#     MINGWGCC
#     DM
#     WATCOM_C
#     BORLANDC
#     POCC
#      VCPP

version.$(OBJEXT): version.c ../configure
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(CFLAGS) -c $(srcdir)/version.c

resample.c: newton_table.c

#newton_table.c: calcnewt$(EXEEXT)
#	./calcnewt $@

#newton_table.c: calcnewt$(EXEEXT)
#	./calcnewt $@

#newton_table.c: calcnewt$(EXEEXT)
#	./calcnewt > $@

newton_table.c: calcnewt$(EXEEXT)
	-cp ../configs/newton_table.c ./newton_table.c
	-./calcnewt$(EXEEXT) > /dev/null && ./calcnewt$(EXEEXT) > $@

$(top_builddir)/interface/libinterface.a $(W32GUI_RES):
	cd $(top_builddir)/interface; $(MAKE)

$(top_builddir)/libarc/libarc.a:
	cd $(top_builddir)/libarc; $(MAKE)

$(top_builddir)/libunimod/libunimod.a:
	cd $(top_builddir)/libunimod; $(MAKE)

$(top_builddir)/utils/libutils.a:
	cd $(top_builddir)/utils; $(MAKE)

objs: $(timidity_OBJECTS) $(timidity_DEPENDENCIES)
	@:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
